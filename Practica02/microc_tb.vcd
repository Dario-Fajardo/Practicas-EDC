$date
	Tue Nov 21 22:51:57 2023
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module microc_tb $end
$var wire 1 ! zero $end
$var wire 6 " Opcode [5:0] $end
$var reg 3 # ALUOp [2:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$var reg 1 & s_inc $end
$var reg 1 ' s_inm $end
$var reg 1 ( we $end
$var reg 1 ) wez $end
$scope module microc1 $end
$var wire 3 * ALUOp [2:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 & s_inc $end
$var wire 1 ' s_inm $end
$var wire 1 ( we $end
$var wire 1 ) wez $end
$var wire 1 ! zero $end
$var wire 1 + zalu $end
$var wire 10 , sum_out [9:0] $end
$var wire 10 - nuevo_PC [9:0] $end
$var wire 8 . mux_alu_out [7:0] $end
$var wire 4 / mux3_out [3:0] $end
$var wire 16 0 instruccion [15:0] $end
$var wire 8 1 inm [7:0] $end
$var wire 10 2 dir_salto [9:0] $end
$var wire 8 3 WD3 [7:0] $end
$var wire 4 4 WA3 [3:0] $end
$var wire 8 5 RD2 [7:0] $end
$var wire 8 6 RD1 [7:0] $end
$var wire 4 7 RA2 [3:0] $end
$var wire 4 8 RA1 [3:0] $end
$var wire 10 9 PC_actual [9:0] $end
$var wire 6 : Opcode [5:0] $end
$scope module alu1 $end
$var wire 3 ; Op [2:0] $end
$var wire 8 < B [7:0] $end
$var wire 8 = A [7:0] $end
$var reg 8 > S [7:0] $end
$var reg 1 + zero $end
$upscope $end
$scope module ffz $end
$var wire 1 ) carga $end
$var wire 1 $ clk $end
$var wire 1 + d $end
$var wire 1 % reset $end
$var reg 1 ! q $end
$upscope $end
$scope module memprog1 $end
$var wire 16 ? Datum [15:0] $end
$var wire 1 $ clk $end
$var wire 10 @ Address [9:0] $end
$upscope $end
$scope module mux3 $end
$var wire 4 A D0 [3:0] $end
$var wire 4 B D1 [3:0] $end
$var wire 1 ' s $end
$var wire 4 C Y [3:0] $end
$var parameter 32 D WIDTH $end
$upscope $end
$scope module mux_alu $end
$var wire 8 E D1 [7:0] $end
$var wire 1 ' s $end
$var wire 8 F Y [7:0] $end
$var wire 8 G D0 [7:0] $end
$var parameter 32 H WIDTH $end
$upscope $end
$scope module mux_pc $end
$var wire 10 I D0 [9:0] $end
$var wire 1 & s $end
$var wire 10 J Y [9:0] $end
$var wire 10 K D1 [9:0] $end
$var parameter 32 L WIDTH $end
$upscope $end
$scope module pc $end
$var wire 10 M D [9:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var parameter 32 N WIDTH $end
$var reg 10 O Q [9:0] $end
$upscope $end
$scope module regfile1 $end
$var wire 4 P RA1 [3:0] $end
$var wire 4 Q RA2 [3:0] $end
$var wire 4 R WA3 [3:0] $end
$var wire 8 S WD3 [7:0] $end
$var wire 1 $ clk $end
$var wire 1 ( we3 $end
$var wire 8 T RD2 [7:0] $end
$var wire 8 U RD1 [7:0] $end
$upscope $end
$scope module sum1 $end
$var wire 10 V A [9:0] $end
$var wire 10 W B [9:0] $end
$var wire 10 X Y [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 N
b1010 L
b1000 H
b100 D
$end
#0
$dumpvars
b1 X
b1 W
b0 V
b0 U
b10 T
bx S
b10 R
b1 Q
b0 P
b0 O
b0x00xx M
b1 K
b0x00xx J
b10010 I
b10 G
b0xx F
b1 E
b0x0 C
b10 B
b0 A
b0 @
b1000000000010010 ?
bx >
b0 =
b0xx <
bx ;
b100000 :
b0 9
b0 8
b1 7
b0 6
b10 5
b10 4
bx 3
b10010 2
b1 1
b1000000000010010 0
b0x0 /
b0xx .
b0x00xx -
b1 ,
x+
bx *
x)
x(
x'
x&
1%
1$
bx #
b100000 "
0!
$end
#500
0%
#1000
0$
#2000
b0 5
b0 G
b0 T
b110000 1
b110000 E
b11 4
b11 B
b11 R
b0 7
b0 Q
b11 8
b11 A
b11 P
b100 "
b100 :
b1100000011 2
b1100000011 I
b10 ,
b10 K
b10 X
b1001100000011 0
b1001100000011 ?
b1 9
b1 @
b1 O
b1 V
1+
b0 3
b0 >
b0 S
b10 -
b10 J
b10 M
b11 /
b11 C
b0 .
b0 <
b0 F
1$
b10 #
b10 *
b10 ;
1)
1(
1&
0'
#3000
0$
#4000
b100 /
b100 C
b11 -
b11 J
b11 M
b0 1
b0 E
b100 4
b100 B
b100 R
b0 8
b0 A
b0 P
b0 "
b0 :
b100 2
b100 I
b11 ,
b11 K
b11 X
b100 0
b100 ?
b10 9
b10 @
b10 O
b10 V
1+
b0 3
b0 >
b0 S
b0 .
b0 <
b0 F
1$
0)
1'
#5000
0$
#6000
0+
b110010 3
b110010 >
b110010 S
b110010 .
b110010 <
b110010 F
b0 /
b0 C
b10 5
b10 G
b10 T
b110010 1
b110010 E
b0 4
b0 B
b0 R
b10 7
b10 Q
b11 8
b11 A
b11 P
b100100 "
b100100 :
b1100100000 2
b1100100000 I
b101 ,
b101 K
b101 X
b1001001100100000 0
b1001001100100000 ?
b100 9
b100 @
b100 O
b100 V
b1100100000 -
b1100100000 J
b1100100000 M
1$
0(
0&
#7000
0$
#8000
1+
b0 5
b0 G
b0 T
b0 1
b0 E
b0 7
b0 Q
b0 8
b0 A
b0 P
b100 "
b100 :
b0 2
b0 I
b110 ,
b110 K
b110 X
b1000000000000 0
b1000000000000 ?
b101 9
b101 @
b101 O
b101 V
b0 3
b0 >
b0 S
b110 -
b110 J
b110 M
b0 /
b0 C
b0 .
b0 <
b0 F
1$
b11 #
b11 *
b11 ;
1)
1(
1&
0'
